@using Scheduler.ViewModels.HealthCenter
@using Scheduler.Models.HealthCenter

@{
    ViewData["Title"] = "Patients List";
    Layout = "_LayoutAdmin";
}

<h2>Patients List</h2>

<br />

<div class="row">
    <div class="col-md-12">
        <div class="btn-group">
            <a class="btn btn-outline-primary" href="@Url.Action("Create", "UserPeople")">Add Patient</a>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <script>
            var JsSexEnum = [
                {
                    Name: "@Person.SexEnum.Male",
                    Key: @((int)Person.SexEnum.Male)
                },
                {
                    Name: "@Person.SexEnum.Female",
                    Key: @((int)Person.SexEnum.Female)
                },
            ];

        </script>
        @(Html.DevExtreme().DataGrid<PatientViewModel>()
                .DataSource(d => d.Mvc()
                    .Controller("UserPeopleWebApi")
                    .LoadAction("People")
                    .Key("ID")
                )
                    .RemoteOperations(true)
                    .Columns(columns =>
                    {
                    columns.AddFor(m => m.FirstName);
                    columns.AddFor(m => m.LastName);
                    columns.AddFor(m => m.BirthDate);
                    columns.AddFor(m => m.Sex).Lookup(lookup => lookup
            .DataSource(new JS("JsSexEnum"))
            .DisplayExpr("Name")
            .ValueExpr("Key")
        ); 
                    columns.AddFor(m => m.PhoneNumber);
                    columns.AddFor(m => m.EMail);
                    columns.AddFor(m => m.ID)
        .AllowSorting(false)
        .CellTemplate(@<div class="float-left">
                    <a class="btn btn-info btn-sm" href="@Url.Action("Details", "UserPeople")/<%= value %>">Details</a>
                    <a class="btn btn-primary btn-sm" href="@Url.Action("Edit", "UserPeople")/<%= value %>">Edit</a>
                    
                </div>).Width("180px").HeaderCellTemplate(@<div class="dx-datagrid-text-content dx-datagrid-action-column">Actions</div>);
                                    })
                                            .SearchPanel(searchPanel => searchPanel
                                            .Visible(true)
                                            .Width(240)
                                            .Placeholder("Search..."))
                                            .GroupPanel(p => p.Visible(true))
                                            .Scrolling(s => s.Mode(GridScrollingMode.Virtual))
                                            .Height(600)
                                            .ShowBorders(true)
        )
    </div>
</div>
