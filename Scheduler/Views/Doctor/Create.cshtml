@using System.IO
@using Scheduler.ViewModels.HealthCenter
@using Scheduler.Models.HealthCenter
@using System.Collections.Generic

@model Scheduler.ViewModels.HealthCenter.DoctorViewModel

@{
    ViewData["Title"] = "Add Doctor";
    Layout = "_LayoutAdmin";
}

<style>

    .image-cropper {
        width: 100px;
        height: 100px;
        position: relative;
        overflow: hidden;
        border-radius: 100%;
    }

        .image-cropper img {
            display: inline;
            margin: 0 auto;
            height: 100%;
            width: auto;
        }
</style>

<script>

    var SexWidgedLoaded = function (e) {
        console.log(e);
        e.value = "@Model.Sex";
    }

</script>
<script>
            var JsSexEnum = [
                {
                    Name: "@Person.SexEnum.Male",
                    Key: @((int)Person.SexEnum.Male)
                },
                {
                    Name: "@Person.SexEnum.Female",
                    Key: @((int)Person.SexEnum.Female)
                }
            ];

</script>
<div class="row">
    <div class="col-md-12">
        <div class="">
            <button id="DoctorCreateFormSubmit" class="btn btn-primary">Save</button>
            <a class="btn btn-outline-primary" asp-controller="Admin" asp-action="DoctorsList">Back to List</a>
        </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-md-12">
        @using (Html.BeginForm("Create", "Doctor", FormMethod.Post, new { Id = "DoctorCreateForm" }))
        {
            @(Html.DevExtreme().Form<DoctorViewModel>()
                            .ID("form")
                            .Items(items =>
                            {
                                items.AddGroup()
                                    .CssClass("first-group")
                                    .ColCount(4)
                                    .Items(groupItems =>
                            {
                                groupItems.AddSimple().Template(@<div class='form-avatar'>
                                    <div class="image-cropper">
                                        <img id="doctor-image" class="" src="~/images/avatar-empty.png" />
                                    </div>
                                    <div class="pull-left">

                                        @(Html.DevExtreme().FileUploader()
                                                    .Disabled(true)

                                        )

                                        @(Html.DevExtreme().Tooltip()
                                                    .Target("#doctor-image")
                                                    .ShowEvent("mouseenter")
                                                    .HideEvent("mouseleave")
                                                    .ContentTemplate("To upload a photo, first you have to save this form.")
                                        )
                                    </div>
                                </div>);
                                                    groupItems.AddGroup().ColSpan(3).Items(secondGroupItems =>
                                {
                                        secondGroupItems.AddSimpleFor(m => m.FirstName);
                                        secondGroupItems.AddSimpleFor(m => m.LastName);
                                        secondGroupItems.AddSimpleFor(m => m.Sex)
                                .Editor(e => e
                                    .RadioGroup()
                                        .DataSource(d => d.Array().Data(new List<string> { "Male", "Female" }))
                                        .Value(Enum.GetName(typeof(Person.SexEnum), Model.Sex))
                            );
                                        secondGroupItems.AddSimpleFor(m => m.BirthDate)
                                .Editor(e => e
                                    .DateBox()
                                    .Width("100%")
                                    .DisplayFormat("yyyy-MM-dd")
                                )
                                .IsRequired(false);
                                        secondGroupItems.AddSimpleFor(m => m.PersonalCode);
                                    });
                                                });


                                                    items.AddGroup()
                                                .CssClass("second-group")
                                                .ColCount(2)
                                                .Items(groupItems =>
                                                {
                                                    groupItems.AddGroup().Items(secondGroupItems =>
                                            {
                                                secondGroupItems.AddSimpleFor(m => m.Address);
                                                secondGroupItems.AddSimpleFor(m => m.City);
                                                secondGroupItems.AddSimpleFor(m => m.Position)
                        .Editor(e => e
                            .SelectBox()
                            .DataSource(d => d.StaticJson().Url("~/data/DoctorsPositions.json").Key("ID"))
                        .DisplayExpr("Title")
                        .ValueExpr("Title")
                        .Value(Model.Position)

                        );
                                            });
                                                    groupItems.AddGroup().Items(secondGroupItems =>
                                            {
                                                secondGroupItems.AddSimpleFor(m => m.PhoneNumber)
                                            .Editor(e => e
                                                .TextBox()
                                            );
                                                secondGroupItems.AddSimpleFor(m => m.EMail);

                                            });

                                                    groupItems.AddSimpleFor(m => m.Notes)
                                            .ColSpan(2)
                                            .Editor(e => e
                                                .TextArea()
                                                .Height(140)
                                            );
                                                });
                                                })
                                                                                .FormData(Model)
            )
        }
    </div>
</div>

<script>
    jQuery("#DoctorCreateFormSubmit").click(function (e) {
        jQuery("#DoctorCreateForm").submit();
    });

</script>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

